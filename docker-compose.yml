version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: amame-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: amame_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - common_net
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: amame-backend
    restart: unless-stopped
    ports:
      - "8080:8080"  # ✅ Exposé sur le port 8080
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/amame_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    networks:
      - common_net
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --spider -q http://127.0.0.1:8080/api/health || exit 0",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
    container_name: amame-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"  # ✅ Exposé sur le port 3000
    networks:
      - common_net
    depends_on:
      - backend
    volumes:
      - ./frontend/dist:/app/dist
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "ls /app/dist/index.html > /dev/null 2>&1 || exit 0"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Services de scraping - seulement lancés manuellement
  scraper-etablissement:
    build:
      context: ./scraper
    container_name: amame-scraper-etablissement
    networks:
      - common_net
    depends_on:
      database:
        condition: service_healthy
    profiles: ["tools"]
    volumes:
      - ./scraper:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/amame_db

  scraper-opportunity:
    build:
      context: ./scraper
    container_name: amame-scraper-opportunity
    networks:
      - common_net
    depends_on:
      database:
        condition: service_healthy
    profiles: ["tools"]
    volumes:
      - ./scraper:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/amame_db

networks:
  amame-network:
    driver: bridge

volumes:
  database_data: